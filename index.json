[{"categories":["學習筆記"],"contents":"  Hello World   #include \u0026lt;iostream\u0026gt;using namespace std; int main(){ //cout \u0026lt;\u0026lt; \u0026#34;hello\u0026#34; \u0026lt;\u0026lt; endl \u0026lt;\u0026lt; \u0026#34;world\u0026#34;; // 印完hello接這印world, endl = end of line 換行的意思(\\n) \tint age; cout \u0026lt;\u0026lt; \u0026#34;How old are you?\u0026#34;; cin \u0026gt;\u0026gt; age; cout \u0026lt;\u0026lt; \u0026#34;I am \u0026#34; \u0026lt;\u0026lt; age \u0026lt;\u0026lt; \u0026#34; years old\u0026#34;; system(\u0026#34;pause\u0026#34;); // 還給OS前系統暫停 \treturn 0; // 結束後還給OS   輸入輸出 (新增標頭檔: #include )   #include \u0026lt;iostream\u0026gt;#include \u0026lt;iomanip\u0026gt;using namespace std; int main(){ int i, j, k; for(i = 1; i \u0026lt;=5; i++){ for(j = 5-i; j \u0026gt; 0; j--){ //印出空白部分 \tcout \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } for(k = 2*i-1; k \u0026gt; 0; k--){ //印出星星部分 \tcout \u0026lt;\u0026lt; \u0026#34;*\u0026#34;; } cout \u0026lt;\u0026lt; endl; } return 0; }   Data Type   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int MyInt = 100; double MyDouble = 3.14159; char Mychar = \u0026#39;a\u0026#39;; cout \u0026lt;\u0026lt; sizeof(MyInt) \u0026lt;\u0026lt; endl; //sizeof(宣告的資料) 回傳資料型別的 byte \tcout \u0026lt;\u0026lt; MyDouble \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; Mychar \u0026lt;\u0026lt;endl; return 0; }   基礎運算子   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ //算術運算子 \tint a = 9; int b = 2; int c = a+b; // c = 11 \tint d = a-b; // d = 7 \tint e = a*b; // e = 18 \tint f = a/b; // f = 4 \tint g = a%5; // g = 4 \tc++; // c = 12 , c = c +1; c+=1; \t// a,b值的交換 \tint temp; //temp = a; //temp = 9 \ta = b; // a,b,temp = 2,2,9 \tb = temp; // a,b,temp = 2,9,9 \tcout \u0026lt;\u0026lt; \u0026#34;ab交換後:\u0026#34; \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; \u0026#34;a: \u0026#34; \u0026lt;\u0026lt; a \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; \u0026#34;b: \u0026#34; \u0026lt;\u0026lt; b \u0026lt;\u0026lt; endl; //邏輯運算子 \tbool myBool = a==b || a\u0026gt;b; // myBool = 1 \tbool myBool_2 = ! (a!=b); // myBool_2 = 0 \tcout \u0026lt;\u0026lt; myBool \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; myBool_2 \u0026lt;\u0026lt;endl; int a = 19 % 7; // a = 5 \tint b = 5 * (3 - 1) +1; // b = 11 \tcout \u0026lt;\u0026lt; ++a*b; //66 \treturn 0; }   常數 Const   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ // 圓面積計算 \tconst float pi = 3.14; //使用常數const宣告 \tint r, area; cout \u0026lt;\u0026lt; \u0026#34;輸入半徑: \u0026#34; ; cin \u0026gt;\u0026gt; r; area = r * r * pi; cout \u0026lt;\u0026lt; \u0026#34;圓面積為: \u0026#34; \u0026lt;\u0026lt;area \u0026lt;\u0026lt; endl; // 美元與台幣匯率計算 \tconst float rate = 30.8; //使用常數const宣告 \tfloat TWD, USD; cout \u0026lt;\u0026lt; \u0026#34;輸入台幣金額: \u0026#34;; cin \u0026gt;\u0026gt; TWD; USD = TWD/rate; cout \u0026lt;\u0026lt; \u0026#34;兌換美元為: \u0026#34; \u0026lt;\u0026lt; USD \u0026lt;\u0026lt; \u0026#34;元\u0026#34; \u0026lt;\u0026lt; endl; return 0; }   if 判斷   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int age; char edu; cout \u0026lt;\u0026lt; \u0026#34;請問年齡幾歲? \u0026#34;; cin \u0026gt;\u0026gt; age; cout \u0026lt;\u0026lt; \u0026#34;是否還在就學中(T/F)\u0026#34;; cin \u0026gt;\u0026gt; edu; if (age \u0026lt; 19) { cout \u0026lt;\u0026lt; \u0026#34;目前不用當兵\u0026#34; \u0026lt;\u0026lt; endl; } else if (edu == \u0026#39;T\u0026#39;){ cout \u0026lt;\u0026lt; \u0026#34;目前還不用當兵\u0026#34; \u0026lt;\u0026lt; endl; } }   swich 選擇   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int num_1, num_2, ans, choice; cout \u0026lt;\u0026lt; \u0026#34;請輸入兩個數: \u0026#34;; cin \u0026gt;\u0026gt; num_1 \u0026gt;\u0026gt; num_2; cout \u0026lt;\u0026lt; \u0026#34;1.加法, 2.減法, 3.乘法, 4.除法: \u0026#34;; cin \u0026gt;\u0026gt; choice; switch(choice){ case 1: ans = num_1 + num_2; cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl; break; case 2: ans = num_1 - num_2; cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl; break; case 3: ans = num_1 * num_2; cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl; break; case 4: ans = num_1 / num_2; cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl; break; default: cout \u0026lt;\u0026lt; \u0026#34;輸入有誤\u0026#34;; break; } }   for 迴圈   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int i; for(i = 1; i \u0026lt;= 10; i++){ if (i == 4){ continue; } cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; endl; } }   while 迴圈   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int my_num = 50; int guess; int max_num = 100; int min_num = 0; int time = 0; while(1){ cout \u0026lt;\u0026lt; \u0026#34;請猜一個\u0026#34; \u0026lt;\u0026lt; min_num \u0026lt;\u0026lt; \u0026#34; 到 \u0026#34; \u0026lt;\u0026lt; max_num \u0026lt;\u0026lt; \u0026#34;之間的數\u0026#34; ; cin \u0026gt;\u0026gt; guess; time++; if (guess == my_num){ cout \u0026lt;\u0026lt; \u0026#34;恭喜答對~\u0026#34; \u0026lt;\u0026lt; \u0026#34;一共猜了: \u0026#34; \u0026lt;\u0026lt; time \u0026lt;\u0026lt; \u0026#34; 次 \u0026#34;; break; } else if(guess \u0026gt;= my_num \u0026amp;\u0026amp; guess \u0026lt;= max_num){ max_num = guess; } else if(guess \u0026lt;= my_num \u0026amp;\u0026amp; guess \u0026gt;= min_num){ min_num = guess; } else{ cout \u0026lt;\u0026lt; \u0026#34;別鬧了\u0026#34; \u0026lt;\u0026lt; endl; } } return 0; }   do-while 迴圈   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ char choice; int cost = 0; do{ cout \u0026lt;\u0026lt; \u0026#34;想吃點什麼呢? \\na.鮭魚壽司($100) \\nb.鰻魚壽司($200) \\nc.鮪魚刺身($500) \\nd.沙拉($80) \\ne.清酒($200)\\n\u0026#34;; cout \u0026lt;\u0026lt; \u0026#34;f.結帳\u0026#34; \u0026lt;\u0026lt; endl; cin \u0026gt;\u0026gt; choice; switch(choice){ case \u0026#39;a\u0026#39;: cost += 100; cout \u0026lt;\u0026lt; \u0026#34;鮭魚壽司現點現做，請稍等喔~\u0026#34; \u0026lt;\u0026lt; endl; break; case \u0026#39;b\u0026#39;: cost += 200; cout \u0026lt;\u0026lt; \u0026#34;鰻魚壽司現點現做，請稍等喔~\u0026#34; \u0026lt;\u0026lt; endl; break; case \u0026#39;c\u0026#39;: cost += 500; cout \u0026lt;\u0026lt; \u0026#34;鮪魚刺身現點現做，請稍等喔~\u0026#34; \u0026lt;\u0026lt; endl; break; case \u0026#39;d\u0026#39;: cost += 80; cout \u0026lt;\u0026lt; \u0026#34;沙拉現點現做，請稍等喔~\u0026#34; \u0026lt;\u0026lt; endl; break; case \u0026#39;e\u0026#39;: cost += 200; cout \u0026lt;\u0026lt; \u0026#34;開車不喝酒唷~ \u0026#34; \u0026lt;\u0026lt; endl; break; case \u0026#39;f\u0026#39;: cout \u0026lt;\u0026lt; \u0026#34;我要結帳~\u0026#34; \u0026lt;\u0026lt;endl; break; default: cout \u0026lt;\u0026lt; \u0026#34;輸入有誤\u0026#34; \u0026lt;\u0026lt; endl; break; } } while(choice != \u0026#39;f\u0026#39;); cout \u0026lt;\u0026lt; \u0026#34;消費金額: \u0026#34; \u0026lt;\u0026lt; cost \u0026lt;\u0026lt; \u0026#34;元\u0026#34; \u0026lt;\u0026lt; endl; return 0; }   巢狀迴圈   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int i, j, k; for(i = 1; i\u0026lt;=5; i++){ for(j = 5-i; j \u0026gt; 0; j--){ //印出空白部分 \tcout \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } for(k = 2*i-1; k \u0026gt; 0; k--){ //印出星星部分 \tcout \u0026lt;\u0026lt; \u0026#34;*\u0026#34;; } cout \u0026lt;\u0026lt; endl; } return 0; }   防呆機制   using namespace std; void measure(float , float ); void printAdvice(int ); int main(){ float height, weight, BMI; flag: cout \u0026lt;\u0026lt; \u0026#34;輸入身高體重\u0026#34;; cin \u0026gt;\u0026gt; height \u0026gt;\u0026gt; weight; if(height\u0026lt;=0 || weight\u0026lt;=0){ cout \u0026lt;\u0026lt; \u0026#34;不要鬧了\u0026#34; \u0026lt;\u0026lt; endl; goto flag; } else{ height = height/100; BMI = weight/(height*height); cout \u0026lt;\u0026lt; \u0026#34;BMI值: \u0026#34; \u0026lt;\u0026lt; BMI; } return 0; }   陣列array   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int expenditure[7]; int i; for(i = 0; i \u0026lt; 7; i++){ cout \u0026lt;\u0026lt; \u0026#34;輸入支出\u0026#34;; cin \u0026gt;\u0026gt; expenditure[i]; } for(i = 0; i \u0026lt; 7; i++){ cout \u0026lt;\u0026lt; expenditure[i] \u0026lt;\u0026lt; endl; } int total = 0; for(i = 0; i \u0026lt;7; i++){ total += expenditure[i]; } cout \u0026lt;\u0026lt; \u0026#34;總支出為: \u0026#34; \u0026lt;\u0026lt; total \u0026lt;\u0026lt; endl; return 0; }   多維陣列   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int i, j; // i 業務員代號，j 為季 \tint sale[2][4]; // 存業務員及季 \tfor(i = 0; i \u0026lt;2; i++){ for(j = 0; j \u0026lt; 4; j++){ cout \u0026lt;\u0026lt; \u0026#34;業務員\u0026#34; \u0026lt;\u0026lt; i+1 \u0026lt;\u0026lt; \u0026#34;在第\u0026#34; \u0026lt;\u0026lt; j+1 \u0026lt;\u0026lt; \u0026#34;季的銷售業績\u0026#34;; cin \u0026gt;\u0026gt; sale[i][j]; } } int total; for(i = 0; i\u0026lt;2; i++){ cout \u0026lt;\u0026lt; \u0026#34;業務員\u0026#34; \u0026lt;\u0026lt; i+1 \u0026lt;\u0026lt; endl; for(j = 0; j \u0026lt; 4; j++){ cout \u0026lt;\u0026lt; \u0026#34;第\u0026#34; \u0026lt;\u0026lt; j+1 \u0026lt;\u0026lt; \u0026#34;季的銷售業績: \u0026#34; \u0026lt;\u0026lt; sale[i][j] \u0026lt;\u0026lt;\u0026#34;\\t\u0026#34;; total += sale[i][j]; } cout \u0026lt;\u0026lt; endl; } cout \u0026lt;\u0026lt; \u0026#34;總銷售業績: \u0026#34; \u0026lt;\u0026lt; total \u0026lt;\u0026lt; endl; return 0; }   指標   #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int num = 100; int * ptr = \u0026amp;num; int** ptr_2 = \u0026amp;ptr; cout \u0026lt;\u0026lt; *ptr \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; **ptr_2 \u0026lt;\u0026lt; endl; return 0; }  #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int num[5]; int* ptr = \u0026amp;num[0]; for(int i = 0; i \u0026lt; 5; i++){ cout \u0026lt;\u0026lt; \u0026#34;請輸入陣列第\u0026#34; \u0026lt;\u0026lt; i+1 \u0026lt;\u0026lt; \u0026#34;筆資料: \u0026#34;; cin \u0026gt;\u0026gt; *(ptr+i); } for(int i = 0; i \u0026lt; 5; i++){ cout \u0026lt;\u0026lt; *(ptr+i); } }   動態陣列 Vector   增加 #include \u0026lt;vector\u0026gt; 標頭檔\n增加 #include \u0026lt;algorithm\u0026gt; 標頭檔使用於排序\n#include \u0026lt;iostream\u0026gt;#include \u0026lt;vector\u0026gt;#include \u0026lt;algorithm\u0026gt;using namespace std; int main(){ char choice; vector\u0026lt;int\u0026gt;myVec; while(1){ cout \u0026lt;\u0026lt; \u0026#34;是否要新增資料(Y/N)\u0026#34;; cin \u0026gt;\u0026gt; choice; if(choice == \u0026#39;Y\u0026#39;){ int temp; cin \u0026gt;\u0026gt; temp; myVec.push_back(temp); } if(choice == \u0026#39;N\u0026#39;){ break; } } sort(myVec.begin(), myVec.end()); cout \u0026lt;\u0026lt; \u0026#34;myVec 排序後\u0026#34; \u0026lt;\u0026lt; endl; for(int i = 0; i \u0026lt; myVec.size(); i++){ cout \u0026lt;\u0026lt; myVec[i] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } }   String 字串   新增 #include \u0026lt;string\u0026gt; 標頭檔\n#include \u0026lt;iostream\u0026gt;#include \u0026lt;string\u0026gt;using namespace std; int main(){ // append \tstring greet = \u0026#34;Hello \u0026#34;; string name = \u0026#34;Hank\u0026#34;; cout \u0026lt;\u0026lt; greet.append(name) \u0026lt;\u0026lt; endl; // replace \tstring myString = \u0026#34;this is a test\u0026#34;; cout \u0026lt;\u0026lt; myString \u0026lt;\u0026lt; endl; myString.replace(10,13,\u0026#34;fun C++ program\u0026#34;); //從10開始替換到13 \tcout \u0026lt;\u0026lt; myString \u0026lt;\u0026lt; endl; // find \tstring fruit = \u0026#34;pineapple\u0026#34;; cout \u0026lt;\u0026lt; fruit.find(\u0026#34;apple\u0026#34;,0) \u0026lt;\u0026lt; endl; //從0開始尋找apple的字串起始值 \t// substr 擷取要的字串 \tstring str_2 = fruit.substr(4,8); //從位置4開始擷取到8結束 \tcout \u0026lt;\u0026lt; fruit \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; str_2 \u0026lt;\u0026lt; endl; return 0; }   結構 Struct   #include \u0026lt;iostream\u0026gt;#include \u0026lt;string\u0026gt;using namespace std; int main(){ struct studentData{ string id; string name; string address; int age; }; studentData myStudent; myStudent.id = \u0026#34;12345\u0026#34;; myStudent.name = \u0026#34;Andy\u0026#34;; myStudent.address = \u0026#34;桃園\u0026#34;; myStudent.age = 30; cout \u0026lt;\u0026lt; myStudent.id \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; myStudent.name \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; myStudent.address \u0026lt;\u0026lt; endl; cout \u0026lt;\u0026lt; myStudent.age \u0026lt;\u0026lt; endl; }  #include \u0026lt;iostream\u0026gt;#include\u0026lt;string\u0026gt;using namespace std; int main(){ struct student{ string name; int grade; }; student Data[5]; for(int i = 0; i \u0026lt; 5; i++){ cout \u0026lt;\u0026lt; \u0026#34;學生\u0026#34; \u0026lt;\u0026lt; i+1 \u0026lt;\u0026lt; \u0026#34;姓名: \u0026#34;; cin \u0026gt;\u0026gt; Data[i].name; cout \u0026lt;\u0026lt; \u0026#34;學生\u0026#34; \u0026lt;\u0026lt; i+1 \u0026lt;\u0026lt; \u0026#34;成績: \u0026#34;; cin \u0026gt;\u0026gt; Data[i].grade; } cout \u0026lt;\u0026lt; \u0026#34;不及格的同學\u0026#34; \u0026lt;\u0026lt; endl; for(int i = 0; i \u0026lt; 5; i++){ if(Data[i].grade \u0026lt; 60){ cout \u0026lt;\u0026lt; Data[i].name \u0026lt;\u0026lt; endl; } } return 0; }   函式   #include \u0026lt;iostream\u0026gt; using namespace std; void myFunction(){ cout \u0026lt;\u0026lt; \u0026#34;This is my first function\u0026#34; \u0026lt;\u0026lt; endl; return; } int main(){ cout \u0026lt;\u0026lt; \u0026#34;呼叫函數\u0026#34; \u0026lt;\u0026lt; endl; myFunction(); return 0; }  #include \u0026lt;iostream\u0026gt; using namespace std; int abs(int num){ if(num \u0026gt;= 0){ return num; } else{ return -1*num; } } int main(){ int myNumber; cin \u0026gt;\u0026gt; myNumber; cout \u0026lt;\u0026lt; abs(myNumber); return 0; }  #include \u0026lt;iostream\u0026gt;#include \u0026lt;cmath\u0026gt;using namespace std; void tune(int arr[], int size){ for(int i = 0; i \u0026lt; size; i++){ arr[i] = sqrt(arr[i])*10; } return ; } int main(){ int score[5]; for(int i = 0; i \u0026lt; 5; i++){ cout \u0026lt;\u0026lt; \u0026#34;輸入學生\u0026#34; \u0026lt;\u0026lt; i +1 \u0026lt;\u0026lt; \u0026#34;的成績: \u0026#34;; cin \u0026gt;\u0026gt; score[i]; } cout \u0026lt;\u0026lt; \u0026#34;原始成績: \u0026#34; \u0026lt;\u0026lt; endl; for(int i = 0; i \u0026lt; 5; i++){ cout \u0026lt;\u0026lt; \u0026#34;學生\u0026#34; \u0026lt;\u0026lt; i+1 \u0026lt;\u0026lt; \u0026#34;成績\u0026#34; \u0026lt;\u0026lt; score[i] \u0026lt;\u0026lt; endl; } tune(score,5); cout \u0026lt;\u0026lt; \u0026#34;調分後成績: \u0026#34; \u0026lt;\u0026lt; endl; for(int i =0; i \u0026lt; 5; i++){ cout \u0026lt;\u0026lt; \u0026#34;學生 \u0026#34; \u0026lt;\u0026lt; i+1 \u0026lt;\u0026lt; \u0026#34;成績\u0026#34; \u0026lt;\u0026lt; score[i] \u0026lt;\u0026lt; endl; } return 0; }  #include \u0026lt;iostream\u0026gt; using namespace std; void convert(int \u0026amp;temp){ temp = temp*9/5 + 32; return; } int main(){ int temperature; cout \u0026lt;\u0026lt; \u0026#34;輸入攝氏溫度: \u0026#34;; cin \u0026gt;\u0026gt; temperature; convert(temperature); cout \u0026lt;\u0026lt; \u0026#34;華氏溫度: \u0026#34; \u0026lt;\u0026lt; temperature \u0026lt;\u0026lt; endl; return 0; } ","permalink":"https://Clair1011.github.io/blog/c++/","tags":["C++"],"title":"C++學習筆記"},{"categories":["學習筆記"],"contents":"一級標題: # + 標題\nHeading 1 二級標題: ## + 標題\nHeading 2 三級標題: ### + 標題\nHeading 3 四級標題: #### + 標題\nHeading 4 五級標題: ##### + 標題\nHeading 5 六級標題: ###### + 標題\nHeading 6 粗體文字前後加上** **阿羽** 阿羽\n斜體文字前後加上* *學習* 學習\n有序序列1. 文字，依號碼依序，若要內縮，前面四個空格鍵\n 有序序列1  內縮文字1   有序序列2  無序序列 * 文字 \n 無序序列1  內縮文字   無序序列2  引用為開頭加上 \u0026gt;  \u0026gt; 引用\n 引用\n []←輸入欲呈現的文字，()←內容置入連結路徑。\n[GitHub網站](https://github.com/Clair1011)\nGitHub網站\n插入圖片: ![](填入圖片路徑)\n程式碼插入方式: 前後各加 `\nhello\n多行程式碼前後各```三次，並於表頭設定所用程式語言，即可呈現該程式語言預設顯示的樣式\nprint(\u0026#34;hello world\u0026#34;) print(\u0026#34;hello world\u0026#34;) 表格建立方式\n   Tables Are Cool     col 3 is right-aligned $1600   col 2 is centered $12   zebra stripes are neat $1    Youtube 插入\n{{\u0026gt; youtube + youtube網頁名稱}}\n  ","permalink":"https://Clair1011.github.io/blog/markdown/","tags":["Markdown"],"title":"Markdown語法筆記"}]